<?xml version="1.0" encoding="UTF-8"?>

<!--
 beens: 根节点， 包含一个或多个been节点
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!--允许been中启动注解进行注入-->
    <context:annotation-config />
    <bean id="userBizByAnnotation" class="demo.dao.impl.UserBizImplByAnnotation" />
    <!--
     been作用域：
     1. singleton（单利模式）
        默认作用于， 针对于整个SpringIoc容器
     2. prototype（原型模式）
        对于每一个been实例请求都会创建一个实例
     3. request

     4. session

     5. global session
    -->
    <!--
     class: 实例的全限定名
     id or name: been的实例名称
     scope: been的生成方式
    -->
    <bean id = "say" class="demo.model.Say" />

    <bean id="userDao" class="demo.dao.impl.UserDaoImpl" />

    <bean id="userBiz" class="demo.dao.impl.UserBizImpl" >
        <!--声明been实例中属性的实例 -->
        <property name="userDao" ref="userDao" />
    </bean>

    <bean id="user1" class="demo.model.Users" scope="prototype">
        <property name="loginName" value="mih" />
        <property name="loginPwd" value="1" />
    </bean>

    <bean id="user2" class="demo.model.Users" scope="prototype">
        <constructor-arg index="0" value="mih" />
        <constructor-arg index="1" value="2" />
    </bean>

    <bean id="user3" class="demo.model.Users" scope="prototype">
        <constructor-arg name="loginName" value="mih" />
        <constructor-arg name="loginPwd" value="2" />
    </bean>

    <bean id="testModel" class="demo.model.TestModel" init-method="init" destroy-method="destory">
        <property name="ints">
            <list>
                <value>1</value>
                <value>2</value>
                <value>3</value>
            </list>
        </property>
        <property name="myList1">
            <list>
                <ref bean="user1" />
                <ref bean="user2" />
            </list>
        </property>
        <property name="myList2">
            <list>
                <ref bean="user2" />
                <ref bean="user3" />
            </list>
        </property>

        <property name="mySet">
            <set>
                <value>mi</value>
                <value>hao</value>
            </set>
        </property>

        <property name="myMap">
            <map>
                <entry key="name">
                    <value>mih</value>
                </entry>
                <entry key="age">
                    <value>25</value>
                </entry>
            </map>
        </property>
    </bean>
    <!--将前置通知注入-->
    <bean id="beforeLogAdvice" class="demo.aop.BeforeLogAdvice"></bean>
    <!--后置通知注入-->
    <bean id="afterLogAdvice" class="demo.aop.AfterLogAdvice"></bean>
    <!--定义代理类-->
    <bean id="ub" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--指定代理的接口-->
        <property name="proxyInterfaces">
            <value>demo.dao.service.UserBiz</value>
        </property>
        <!--指定通知-->
        <property name="interceptorNames">
            <list>
                <!--织入前置通知-->
                <value>beforeLogAdvice</value>
                <!--织入后置通知-->
                <value>afterLogAdvice</value>
            </list>
        </property>
        <!--指定目标对象-->
        <property name="target" ref="userBiz"></property>
    </bean>


</beans>